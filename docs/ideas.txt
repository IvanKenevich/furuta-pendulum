Furuta project ideas
====================

control algos
-------------
- *** State space vs classical
- *** State space with integrator
- Model predictive control
- Non-linear controller (compare performance to linear)
- ** Modulo arm1

estimators
----------
- Kalman filter vs secant line for speed
- different length of secant line for speed est (define desired speed resolution (based on max expected speed) -> derive window size from that)
- *** Current estimation sucks (observer math typo? try Kalman?)
- * Investigate why current matters for furuta but not RWIP (look at the magnitudes of torques/delta Is/whatever that are caused by the current state variable)
- ** Come up with an objective numeric performance metric and use it throughout

tuning
------
- Test effects of simplifying inertial tensor matrices (principal axes + same inertia in yy and zz)
- Investigate parameter optimization via controllability Grammian (specifically, changing arm2 mass)

mechanical
----------
- Dual motor system (one with high torque and backlash, other with low torque no backlash, have benefits of both)
  (MIMO or logical switch to choose which motor to use and how much)

sys id
------
- Investigate more accurate / different ways of measuring motor parameters (measure each par manually and compare to freq response solved versions)
	- ask on stack exchange: does the motor have the same friction coeffficent when power or unpowered
- Obtain ss coefficients in the upside down position then flip the signs to predict ss in the upside down orientation
- Use optimization and test data to optimize model parameters
- ** Learn how to model nonlinearities (backlash, stiction)